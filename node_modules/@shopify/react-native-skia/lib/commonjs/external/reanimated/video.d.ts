import type { SharedValue } from "react-native-reanimated";
import type { SkImage, Video } from "../../skia/types";
export type Animated<T> = SharedValue<T> | T;
export interface PlaybackOptions {
    playbackSpeed: Animated<number>;
    looping: Animated<boolean>;
    paused: Animated<boolean>;
    seek: Animated<number | null>;
}
type Materialized<T> = {
    [K in keyof T]: T[K] extends Animated<infer U> ? U : T[K];
};
export type MaterializedPlaybackOptions = Materialized<Omit<PlaybackOptions, "seek">>;
export declare const setFrame: (video: Video, currentFrame: SharedValue<SkImage | null>) => void;
export declare const processVideoState: (video: Video | null, duration: number, framerate: number, currentTimestamp: number, options: Materialized<Omit<PlaybackOptions, "seek">>, currentTime: SharedValue<number>, currentFrame: SharedValue<SkImage | null>, lastTimestamp: SharedValue<number>, seek: SharedValue<number | null>) => void;
export {};
