"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setFrame = exports.processVideoState = void 0;
var _Platform = require("../../Platform");
const setFrame = (video, currentFrame) => {
  "worklet";

  const img = video.nextImage();
  if (img) {
    if (currentFrame.value) {
      currentFrame.value.dispose();
    }
    if (_Platform.Platform.OS === "android") {
      currentFrame.value = img.makeNonTextureImage();
    } else {
      currentFrame.value = img;
    }
  }
};
exports.setFrame = setFrame;
const processVideoState = (video, duration, framerate, currentTimestamp, options, currentTime, currentFrame, lastTimestamp, seek) => {
  "worklet";

  if (!video) {
    return;
  }
  if (options.paused) {
    return;
  }
  const delta = currentTimestamp - lastTimestamp.value;
  const frameDuration = 1000 / framerate;
  const currentFrameDuration = Math.floor(frameDuration / options.playbackSpeed);
  if (currentTime.value + delta >= duration && options.looping) {
    seek.value = 0;
  }
  if (seek.value !== null) {
    video.seek(seek.value);
    currentTime.value = seek.value;
    setFrame(video, currentFrame);
    lastTimestamp.value = currentTimestamp;
    seek.value = null;
    return;
  }
  if (delta >= currentFrameDuration) {
    setFrame(video, currentFrame);
    currentTime.value += delta;
    lastTimestamp.value = currentTimestamp;
  }
};
exports.processVideoState = processVideoState;
//# sourceMappingURL=video.js.map